/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Microsoft (https://sketchfab.com/microsoft)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/models/b82e419607214780a5c65e4a8f455735
title: Booster Rockets and Fuel Tank
*/

import React, { useRef } from "react";
import { useState, useEffect } from "react";
import { useFrame } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";

export default function BoosterRocket({ position, rotation, ...props }) {
  const group = useRef();
  const { nodes, materials } = useGLTF(
    "/space_exhibition_assets/booster_rockets_and_fuel_tank/scene.gltf"
  );

  // const [title, setTitle] = useState(false);
  const [hover, setHover] = useState(false);
  // useEffect(() => {
  //   document.body.style.cursor = hover ? "pointer" : "auto";
  // }, [hover]);

  // useFrame(() => {
  //   group.current.rotation.y += 0.001;
  // });
  const hoverMaterial = new THREE.MeshPhongMaterial({
    color: "red",
    flatShading: true,
  });

  return (
    <>
      <group
        position={position}
        ref={group}
        {...props}
        dispose={null}
        // scale={hover ? 1.05 : 1}
        // style={{ cursor: hover ? "pointer" : "default" }}
        // cursor={hover ? "pointer" : "default"}

        // onPointerOver={(e) => e.object.material.color.set("red")}
        // setting the color works, setting material doesn't
        // onPointerOVer={(e) => e.object.material.set(hoverMaterial)}
        // onPointerOut={(e) => e.object.material.set(materials.Material__198)}
      >
        <group rotation={rotation}>
          <mesh
            geometry={nodes.booster.geometry}
            material={materials.Material__198}
            // onPointerOver={() => setHover(true)}
            // onPointerOut={() => setHover(false)}
          >
            {/* {hover === true && (
              <meshStandardMaterial
                attach="material"
                color="white"
                roughness={0.3}
                metalness={0.0}
                opacity={hover ? 1 : 0}
              />
            )} */}
          </mesh>
          {/* <Html>
            <div>
              <Button
                onPointerOver={() => {
                  setTitle(true);
                }}
                onPointerOut={() => {
                  setTitle(false);
                }}
                color="white"
              >
                <QuestionOutlineIcon w={24} h={24} />
              </Button>
              <Container
                display={title ? "block" : "none"}
                className="content"
                color="white"
              >
                <p>Booster Engines</p>
              </Container>
            </div>
          </Html> */}
        </group>
      </group>
    </>
  );
}

useGLTF.preload(
  "/space_exhibition_assets/booster_rockets_and_fuel_tank/scene.gltf"
);
